# sw academy 문제풀이 2 - 5432. 쇠막대기 자르기
'''
여러 개의 쇠막대기를 레이저로 절단하려고 한다.
효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자른다.
쇠막대기와 레이저의 배치는 다음 조건을 만족한다.
 - 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다.
 - 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.
 - 각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
 - 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.
아래 그림은 위 조건을 만족하는 예를 보여준다.
수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향이다.
이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있다.
    1. 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 “()” 으로 표현된다. 또한, 모든 “()”는 반드시 레이저를 표현한다.
    2. 쇠막대기의 왼쪽 끝은 여는 괄호 ‘(’ 로, 오른쪽 끝은 닫힌 괄호 ‘)’ 로 표현된다.
위 예의 괄호 표현은 그림 위에 주어져 있다.
쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고,
이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.
쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하라.

[입력]
첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
각 테스트 케이스의 첫 번째 줄에는 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.

[출력]
각 테스트 케이스마다 #T를 출력하고 한 칸을 띄운 후, 잘려진 조각의 총 개수를 출력한다.
'''
import sys
sys.stdin = open("sw5432input.txt")

# 테스트케이스의 수
T = int(input())
for test_case in range(1, T+1):
    # 쇠막대기 및 레이저 정보 입력
    string = input()

    # 각 괄호에 대해서
    # 1. '('일 경우, 우선 쇠막대기로 받는다(아직 레이저인지 모름)
    # 2. '(' 다음 바로 ')'가 올 경우, 이는 레이저이다 - 레이저가 오는 순간 쌓여있던 쇠막대기의 개수만큼 조각이 나온다
    # 3. ')'를 통해 쇠막대기가 끝날 경우, 끝 조각이 나온다.

    # 총 조각의 수
    result = 0
    # 현재 쌓여있는 조각의 수
    cnt = 0
    # ()를 만날 경우, 누적되어있던 조각의 수만큼 result에 추가
    for i in range(len(string)):
        # 레이저 or 쇠막대기의 시작
        if string[i] == '(':
            cnt += 1 # 쇠막대기의 시작이라고 가정하고, cnt 증가
        # 레이저 or 쇠막대기의 시작
        elif string[i] == ')':
            if string[i-1] == '(': # 레이저일 경우
                cnt -= 1 # 앞에서 잘못 추가해준 쇠막대기의 수 차감
                result += cnt # 제대로 쌓여있는 쇠막대기 조각 누적 수 추가
            else: # 쇠막대기의 끝일 경우
                cnt -= 1 # 기존에 있던 쇠막대기 하나 제거
                result += 1 # 끝난 쇠막대리고 인해 나온 조각 추가
    print(f'#{test_case} {result}')
